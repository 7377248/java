class Info
{
	private String title;
	private String content;
	private boolean flag = true;
	public synchronized void set(String title,String content)
	{
		if(this.flag == false)
		{
			try
			{
				super.wait();
			}
			catch (InterruptedException e)
			{
				e.printStackTrace();
			}
		}
		this.title = title;
		this.content = content;
		this.flag = false;
		super.notify();
	}
	public synchronized void get()
	{
		if(this.flag == true)
		{
			try
			{
				super.wait();
			}
			catch (InterruptedException e)
			{
				e.printStackTrace();
			}
		}
		System.out.println(this.title + "--"+this.content);
		this.flag =true;
		super.notify();
	}
}



class Product implements Runnable
{
	private Info info;
	public Product(Info info)
	{
		this.info = info;
	}
	@Override
	public void run()
	{
		for(int i  = 0;i<100;i++)
		{
			if(i % 2 == 0)
			{
				this.info.set("第二次生产","第二次测试");
			}
			else
			{
				this.info.set("第五次生产","第五次测试");
			}
		}
	}
}

class Custom implements Runnable
{
	private Info info;
	public Custom(Info info)
	{
		this.info = info ;
	}
	@Override
	public void run()
	{
		for(int i = 0; i<100;i++)
		{
			this.info.get();
		}
	}
}

public class  RunnableTest
{
	public static void main(String[] args) 
	{
		Info info = new Info();
		new Thread(new Product(info)).start();
		new Thread(new Custom(info)).start();
	}
}
